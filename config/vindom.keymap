/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define LOWER 1
#define RAISE 2


/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// | left ALT  |  Q  |  W  |  F  |  P  |  G  |      |  J  |  L  |  U  |  Y  | PSCR | TO2  |
// |      ESC  |  A  |  R  |  S  |  T  |  D  |      |  H  |  N  |  E  |  I  |  O   | TO1  |
// |           |  Z  |  X  |  C  |  V  |  B  |      |  K  |  M  |  ,  |  .  |  ?   | 
//             | TAB | left CTRL| SPACE | left SFT |     | BSPC| SPC | ENT | DEL | 
                        bindings = <
   &kp TAB   &kp CAPSLOCK   &kp T   &kp    &kp X   &kp E   													                                                 &kp J   &kp L  &kp U       &kp Y        &kp PRINTSCREEN    &to 2
   &kp ESCAPE     &kp A   &kp Q   &kp W   &kp D   &kp R   													                                                 &kp H   &kp N  &kp E       &kp I        &kp O              &to 1
		          &kp LEFT_SHIFT   &kp A   &kp S   &kp V   &kp F  													                                                 &kp K   &kp M  &kp COMMA   &kp PERIOD   &kp QUESTION  
										               &kp LEFT_ALT &kp ENTER  &kp SPACE  &kp C       &kp BACKSPACE &kp SPACE &kp ENTER &kp DELETE 
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
// | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
//   &kp TAB    &kp N1       &kp N2       &kp N3       &kp N4       &kp N5         &kp N6   &kp N7   &kp N8 &kp N9    &kp N0 &kp BSPC
//   &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &kp LEFT &kp DOWN &kp UP &kp RIGHT &trans &trans
//     &trans       &trans       &trans       &trans       &trans         &trans   &trans   &trans &trans    &trans &trans
//                                    &kp LGUI     &trans       &kp SPACE      &kp RET  &trans   &kp RALT

	 &kp A   &kp A &kp A &kp A &kp A &kp A   																						&kp A &kp A  &kp A     &kp A   &kp A    &kp A
	 &kp A &kp A &kp A &kp A &kp A &kp A   																						&kp A &kp A  &kp A     &kp A   &kp A &kp A
		 &kp A &kp A &kp A &kp A &kp A  																						&kp A &kp A  &kp A &kp A &kp A  
										  &kp A &kp A &kp A &kp A   &kp A &kp A &kp A &kp A 

                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
//   &kp  TAB  &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp ASTRK &kp LPAR &kp RPAR &kp BSPC
//   &kp LCTRL &trans   &trans &trans   &trans   &trans      &kp MINUS &kp EQUAL &kp LBKT  &kp RBKT &kp BSLH &kp GRAVE
//   &kp LSHFT &trans   &trans &trans   &trans   &trans      &kp UNDER &kp PLUS  &kp LBRC  &kp RBRC &kp PIPE &kp TILDE
//                             &kp LGUI &trans   &kp SPACE   &kp RET   &trans    &kp RALT
	 &kp A   &kp A &kp A &kp A &kp A &kp A   																						&kp A &kp A  &kp A     &kp A   &kp A    &kp A
     &kp A &kp A &kp A &kp A &kp A &kp A   																						&kp A &kp A  &kp A     &kp A   &kp A &kp A
		 &kp A &kp A &kp A &kp A &kp A  																						&kp A &kp A  &kp A &kp A &kp A  
										  &kp A &kp A &kp A &kp A   &kp A &kp A &kp A &kp A 

                        >;
                };
        };
};
